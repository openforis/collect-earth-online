* Collect Earth Online

/Crowdsourced visual interpretation of on-demand satellite imagery/

This is a Java 10 application written with the Spark web framework
(http://sparkjava.com).

** Installation

*** In order to build and run Collect Earth Online, you will need:

- Java Development Kit 14+
- Either Maven 3.3.9+ or Gradle 3.3+
- Tomcat 8+ (optional)
- PostgreSQL 12
- Postgis 3

*** With the text based JSON database

The JSON database will initialize automatically when running Maven or Gradle.

*** With PostgreSQL database

Initialize the database using
#+begin_src sh
npm run build-db-all
#+end_src

** Running with an Embedded Jetty Webserver

This is the simplest solution to get up and running quickly. The
application will be available at https://localhost:8080.

*** With Maven

#+begin_src sh
mvn compile exec:java -Dexec.args=<JSON|POSTGRES>
#+end_src

*** With Gradle

#+begin_src sh
gradle run -PrunArgs=<JSON|POSTGRES>
#+end_src

** Running inside Tomcat

This allows multiple web applications to share the same host and port
on your machine. You will need to install a recent version of Tomcat
(version 8+ recommended) to use this method. The application will be
available at http://localhost:8080/ceo.

*** With Maven

#+begin_src sh
mvn package
export TOMCAT_HOME="where/you/installed/tomcat"
sudo ln -s $PWD/target/collect-earth-online-<version>.war $TOMCAT_HOME/webapps/ceo.war
sudo $TOMCAT_HOME/bin/startup.sh
#+end_src

*** With Gradle

#+begin_src sh
gradle build
export TOMCAT_HOME="where/you/installed/tomcat"
sudo ln -s $PWD/build/libs/collect-earth-online-<version>.war $TOMCAT_HOME/webapps/ceo.war
sudo $TOMCAT_HOME/bin/startup.sh
#+end_src

*** Adding Analytics
If you would like to add google analytics to your site you can follow these directions
1. Visit https://analytics.google.com and create your analytics account for the site.
2. Copy the .js Tracking Info code
3. Create file /src/main/resources/template/freemarker/googleanalytics.ftl
4. Paste .js Tracking Info code in googleanalytics.ftl
5. restart application

*** Enabling https
We recommend that you enable https so that all features work properly and securely.  These directions are for the domain collect.earth.
You will have to replace that with your domain every place you see it in the instructions.
1. Install certbot by following the instructions located at https://certbot.eff.org/ for your system. Below is the example for Arch Linux:
#+begin_src sh
    sudo pacman -S certbot openssl
#+end_src
2. Create initial cert:
#+begin_src sh
    export CEO_DIR="/home/openforis/github/collect-earth-online"
    export CERT_DOMAIN="collect.earth"

    sudo certbot certonly --webroot -w $CEO_DIR/target/classes/public -d $CERT_DOMAIN
#+end_src
3. Package the cert into the JKS:
#+begin_src sh
    export CERT_PASSWORD="collect"
    export CACERT_PASSWORD="changeit"

    sudo openssl pkcs12 -export -in /etc/letsencrypt/live/$CERT_DOMAIN/cert.pem -inkey /etc/letsencrypt/live/$CERT_DOMAIN/privkey.pem -out ceo.p12 -name ceo -passout pass:$CERT_PASSWORD

	sudo keytool -importkeystore -destkeystore keystore.jks -srckeystore ceo.p12 -srcstoretype PKCS12 -storepass $CERT_PASSWORD -srcstorepass $CERT_PASSWORD -alias ceo -noprompt

	sudo keytool --importcert -file /etc/letsencrypt/live/$CERT_DOMAIN/fullchain.pem -keystore /etc/ssl/certs/java/cacerts -v -alias ceo_chain -storepass $CACERT_PASSWORD -noprompt
#+end_src
4. Edit the gee-gateway config.py CERT and KEY entries to point to the cert.pem and privatekey.pem just created.
5. Edit collect-earth-online/deploy/scripts/cert_renewal.sh variables CEO_DIR, and CERT_DOMAIN:
    a. CEO_DIR should point to the location of your collect-earth-online install.
    b. CERT_DOMAIN should be the domain you will be using for your application.
6. Edit collect-earth-online/deploy/scripts/packageKeysAndRestartApps.sh variables CERT_DOMAIN, CERT_PASSWORD, and CACERT_PASSWORD:
    a. CERT_DOMAIN should be the domain you will be using for your application.
    b. CERT_PASSWORD should be the password you would like to use for the certificate.
    c. CACERT_PASSWORD should be the password for java cacerts keystore (default is changeit.)
7. Edit collect-earth-online/deploy/scripts/startceo.sh variable CEO_DIR:
    a. CEO_DIR should point to the location of your collect-earth-online install.
8. Edit collect-earth-online/deploy/scripts/startgeegateway.sh variable GEE_DIR:
    a. GEE_DIR should point to the location of your gee-gateway install.
** Building OpenForis Collect

In order to easily exchange information with OpenForis' other software
products, Collect Earth Online (CEO) shares a database with OpenForis
Collect. Access to this database is made through REST API calls to the
Collect web application running on the same host as CEO. In order to
build and launch Collect, follow these steps:

1. Install Maven 3.5.0+. You can download the latest version here:
   https://maven.apache.org/download.cgi

2. Set M2_HOME to the directory where you installed this version of
   Maven.

#+begin_src sh
export M2_HOME="/where/you/installed/maven-3.5.0"
#+end_src

3. Clone the collect repository and package it as a WAR file.

#+begin_src sh
git clone https://github.com/openforis/collect.git
cd collect
git checkout ceo
mvn clean
mvn verify
sudo ln -s $PWD/collect-web/collect-webapp/target/collect.war $TOMCAT_HOME/webapps/collect.war
#+end_src

4. Create $TOMCAT_HOME/conf/Catalina/localhost/collect.xml with the
   following contents (but replace "/your/home/directory" in the url
   field with the path to your actual home directory):

#+begin_src nxml
<?xml version="1.0" encoding="UTF-8" ?>

<Context path="/collect" reloadable="false">
  <Parameter name="collect.simple_editor" value="false" />
  <Resource
      name="jdbc/collectDs"
      auth="Container"
      type="javax.sql.DataSource"
      factory="org.apache.tomcat.jdbc.pool.DataSourceFactory"
      driverClassName="org.h2.Driver"
      url="jdbc:h2:/your/home/directory/.openforis/collect;AUTO_SERVER=true">
  </Resource>
</Context>
#+end_src

5. Create the ".openforis" directory referenced in the above url field
   to hold Collect's database.

#+begin_src sh
mkdir /your/home/directory/.openforis
#+end_src

6. Launch Tomcat.

#+begin_src sh
sudo $TOMCAT_HOME/bin/startup.sh
#+end_src

The Collect web application should now be running at http://localhost:8080/collect.

** Building OpenForis Users

In order to share user logins and user groups across the various
OpenForis software products, we need to install a final web
application called OpenForis Users. To build and launch Users, follow
these steps:

1. Like CEO, Users needs to be built with a recent version of Maven.
   Set M2_HOME to the directory where you installed Maven 3.3.9+.

#+begin_src sh
export M2_HOME="/where/you/installed/maven-3.3.9"
#+end_src

2. Clone the users repository and package it as a WAR file.

#+begin_src sh
git clone https://github.com/openforis/users.git
cd users
mvn clean
mvn generate-sources -Pcode-gen
mvn package
sudo ln -s $PWD/target/of-users.war $TOMCAT_HOME/webapps/of-users.war
#+end_src

3. Create $TOMCAT_HOME/conf/Catalina/localhost/of-users.xml with the
   following contents (but replace "/your/home/directory" in the url
   field with the path to your actual home directory):

#+begin_src nxml
<?xml version="1.0" encoding="UTF-8" ?>

<Context path="/of-users" reloadable="false">
  <Resource
      name="jdbc/of-users-ds"
      auth="Container"
      type="javax.sql.DataSource"
      factory="org.apache.tomcat.jdbc.pool.DataSourceFactory"
      driverClassName="org.h2.Driver"
      url="jdbc:h2:/your/home/directory/.openforis/of-users;AUTO_SERVER=true">
  </Resource>
</Context>
#+end_src

4. Create the ".openforis" directory referenced in the above url field
   to hold Collect's database.

#+begin_src sh
mkdir /your/home/directory/.openforis
#+end_src

5. Add the H2 JAR file to the $TOMCAT_HOME/lib directory. You can
   download it from here:
   http://repo2.maven.org/maven2/com/h2database/h2/1.4.193/h2-1.4.193.jar

6. Launch Tomcat.

#+begin_src sh
sudo $TOMCAT_HOME/bin/startup.sh
#+end_src

** Building GEE-Gateway

In order to use the Geo-Dash portion of CEO, we need to install
an application to communicate with Google Earth Engine called GEE-Gateway.
To build and launch GEE-Gateway, download the source code from
https://github.com/openforis/gee-gateway and then follow these steps:

*** REQUIREMENTS

1. [Python 2.7](https://www.python.org/)
2. [pip (package manager)](https://github.com/pypa/pip)
3. [Earth Engine Python API](https://developers.google.com/earth-engine/python_install)
4. [virtualenv](https://pypi.python.org/pypi/virtualenv) (Optional)

*** INSTALLATION

From project root directory

#+begin_src sh
pip install -r requirements.txt
#+end_src

OR using /virtualenv/ (Optional)

#+begin_src sh
virtualenv env
source env/bin/activate
pip install -r requirements.txt
#+end_src

*** CONFIGURATION

Edit the configuration file (*config.py* or *instance/config.py*)

#begin_src python
DEBUG = False # {True|False}
PORT = 8888 # flask server running port
HOST = '0.0.0.0' # flask server running host
CO_ORIGINS = '*' # origin or list of origins to allow requests from
import logging
LOGGING_LEVEL = logging.INFO # {NOTSET|DEBUG|INFO|WARNING|ERROR|CRITICAL}
#end_src

*** EXECUTION

From project root directory

#begin_src sh
python run.py
#end_src

OR using /virtualenv/ (Optional)

#begin_src sh
source env/bin/activate
python run.py
#end_src

#begin_src sh
usage: run.py [-h] [--gmaps_api_key GMAPS_API_KEY] [--ee_account EE_ACCOUNT]
              [--ee_key_path EE_KEY_PATH]

optional arguments:
  -h, --help            show this help message and exit
  --gmaps_api_key GMAPS_API_KEY
                        Google Maps API key
  --ee_account EE_ACCOUNT
                        Google Earth Engine account
  --ee_key_path EE_KEY_PATH
                        Google Earth Engine key path
#end_src

** Contact

*Authors:*
- Gary W. Johnson (SIG)
- David S. Saah (SIG)
- Billy Ashmall (NASA)
- Githika Tondapu (NASA)
- Stefano Ricci (FAO)
- Roberto Fontanarosa (FAO)
- Alfonso SanchezPausDiaz (FAO)
- Matt Spencer (SIG)
- Biplov Bhandari (SIG)

*Emails:*

- gjohnson@sig-gis.com
- dsaah@sig-gis.com
- billy.ashmall@nasa.gov
- githika.tondapu@nasa.gov
- stefano.ricci@fao.org
- roberto.fontanarosa@fao.org
- alfonso.sanchezpausdiaz@fao.org
- mspencer@sig-gis.com
- bbhandari@sig-gis.com
